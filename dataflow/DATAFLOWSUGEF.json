{
	"name": "DATAFLOWSUGEF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Source_SUGEF",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DestinatiosynSugef",
						"type": "DatasetReference"
					},
					"name": "SinkOperacionesActivas"
				},
				{
					"dataset": {
						"referenceName": "DestinationSynapseDeudor",
						"type": "DatasetReference"
					},
					"name": "sinkDeudor"
				}
			],
			"transformations": [
				{
					"name": "OperacionesActivas"
				},
				{
					"name": "Deudor"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ArchivoCIC as (Deudor as (AtrasoMaximodiasSBD as short, AtrasoMaximodiasSBD_12 as short, AtrasoMaximodiasSBD_24 as short, FechaInicioReqAutorizacion as date, IdPersona as integer, IndicadorAutorizacion as string, IndicadorNumericoDeudor as double, IndicadorNumericoDeudorSBD as double, {IndicadorReqAut1-05} as string, ListaGrupoInteresEconomico as string, ListaOperacionesActivas as (OperacionActiva as (ActualizadoAl as string, ComponenteFijoTasaVariable as double, Condicion as string, CuotaIntereses as double, CuotaPrincipal as double, DiasAtraso as short, Entidad as string, EsSBD as string, EstadoOperacion as short, FechaCambioTipoTasa as string, FechaFormalizacion as string, FechaVencimiento as string, FrecuenciaAjusteTasa as short, FrecuenciaPagoPrincipal as short, Generador as short, IdOperacion as string, Moneda as string, MontoAutorizado as double, MontoFormalizado as double, MontoNoDesembolsado as double, ParametroReferencia as short, PisoTasa as double, Saldo as double, TasaInteresNominal as double, TechoTasa as double, TipoOperacion as short, TipoTasa as string)[]), ListaOperacionesHistorico as (OperacionHistorica as (AtrasoMaximoEnDias as short, AtrasoMedioEnDias as double, Entidad as string, EsSBD as boolean, FechaVencimiento as string, IdOperacion as string, MotivoNoReporteliquidacion as short, NumMesesReportados as short, PonderadorOperacion as double, PuntajeOperacion as double, SituacionOperacion as short, UltimoPeriodoReportado as string)[]), MontoFiado as double, MontoFiadoSBD as double, MontoNoDesembolsadoSBD_ME as double, MontoNoDesembolsadoSBD_MN as double, MontoNoDesembolsado_ME as double, MontoNoDesembolsado_MN as double, NivelCompPagoHist as short, NivelCompPagoHistSBD as short, PorcentajeDolarizacion as double, PorcentajeTasavariable as double, SaldoAdeudadoSBD_ME as double, SaldoAdeudadoSBD_MN as double, SaldoTotalAdeudado_ME as double, SaldoTotalAdeudado_MN as double, TipoPersona as boolean, TotalCuotaCreditoSBD_ME as double, TotalCuotaCreditoSBD_MN as double, TotalCuotaCredito_ME as double, TotalCuotaCredito_MN as double)[], Encabezado as (IdEntidad as long, Periodo as date, Registros as integer))",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     validationMode: 'none',",
				"     namespaces: true) ~> source1",
				"source1 foldDown(unroll(ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva, ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva),",
				"     mapColumn(",
				"          ActualizadoAl = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.ActualizadoAl,",
				"          ComponenteFijoTasaVariable = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.ComponenteFijoTasaVariable,",
				"          Condicion = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.Condicion,",
				"          CuotaIntereses = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.CuotaIntereses,",
				"          CuotaPrincipal = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.CuotaPrincipal,",
				"          DiasAtraso = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.DiasAtraso,",
				"          Entidad = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.Entidad,",
				"          EsSBD = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.EsSBD,",
				"          EstadoOperacion = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.EstadoOperacion,",
				"          FechaCambioTipoTasa = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.FechaCambioTipoTasa,",
				"          FechaFormalizacion = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.FechaFormalizacion,",
				"          FechaVencimiento = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.FechaVencimiento,",
				"          FrecuenciaAjusteTasa = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.FrecuenciaAjusteTasa,",
				"          FrecuenciaPagoPrincipal = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.FrecuenciaPagoPrincipal,",
				"          Generador = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.Generador,",
				"          IdOperacion = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.IdOperacion,",
				"          Moneda = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.Moneda,",
				"          MontoAutorizado = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.MontoAutorizado,",
				"          MontoFormalizado = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.MontoFormalizado,",
				"          MontoNoDesembolsado = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.MontoNoDesembolsado,",
				"          ParametroReferencia = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.ParametroReferencia,",
				"          PisoTasa = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.PisoTasa,",
				"          Saldo = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.Saldo,",
				"          TasaInteresNominal = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.TasaInteresNominal,",
				"          TechoTasa = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.TechoTasa,",
				"          TipoOperacion = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.TipoOperacion,",
				"          TipoTasa = ArchivoCIC.Deudor.ListaOperacionesActivas.OperacionActiva.TipoTasa,",
				"          IdPersona = ArchivoCIC.Deudor.IdPersona",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> OperacionesActivas",
				"source1 foldDown(unroll(ArchivoCIC.Deudor, ArchivoCIC.Deudor),",
				"     mapColumn(",
				"          AtrasoMaximodiasSBD = ArchivoCIC.Deudor.AtrasoMaximodiasSBD,",
				"          AtrasoMaximodiasSBD_12 = ArchivoCIC.Deudor.AtrasoMaximodiasSBD_12,",
				"          AtrasoMaximodiasSBD_24 = ArchivoCIC.Deudor.AtrasoMaximodiasSBD_24,",
				"          FechaInicioReqAutorizacion = ArchivoCIC.Deudor.FechaInicioReqAutorizacion,",
				"          IdPersona = ArchivoCIC.Deudor.IdPersona,",
				"          IndicadorAutorizacion = ArchivoCIC.Deudor.IndicadorAutorizacion,",
				"          IndicadorNumericoDeudor = ArchivoCIC.Deudor.IndicadorNumericoDeudor,",
				"          IndicadorNumericoDeudorSBD = ArchivoCIC.Deudor.IndicadorNumericoDeudorSBD,",
				"          {IndicadorReqAut1-05} = ArchivoCIC.Deudor.{IndicadorReqAut1-05},",
				"          ListaGrupoInteresEconomico = ArchivoCIC.Deudor.ListaGrupoInteresEconomico,",
				"          ListaOperacionesActivas = ArchivoCIC.Deudor.ListaOperacionesActivas,",
				"          ListaOperacionesHistorico = ArchivoCIC.Deudor.ListaOperacionesHistorico,",
				"          MontoFiado = ArchivoCIC.Deudor.MontoFiado,",
				"          MontoFiadoSBD = ArchivoCIC.Deudor.MontoFiadoSBD,",
				"          MontoNoDesembolsadoSBD_ME = ArchivoCIC.Deudor.MontoNoDesembolsadoSBD_ME,",
				"          MontoNoDesembolsadoSBD_MN = ArchivoCIC.Deudor.MontoNoDesembolsadoSBD_MN,",
				"          MontoNoDesembolsado_ME = ArchivoCIC.Deudor.MontoNoDesembolsado_ME,",
				"          MontoNoDesembolsado_MN = ArchivoCIC.Deudor.MontoNoDesembolsado_MN,",
				"          NivelCompPagoHist = ArchivoCIC.Deudor.NivelCompPagoHist,",
				"          NivelCompPagoHistSBD = ArchivoCIC.Deudor.NivelCompPagoHistSBD,",
				"          PorcentajeDolarizacion = ArchivoCIC.Deudor.PorcentajeDolarizacion,",
				"          PorcentajeTasavariable = ArchivoCIC.Deudor.PorcentajeTasavariable,",
				"          SaldoAdeudadoSBD_ME = ArchivoCIC.Deudor.SaldoAdeudadoSBD_ME,",
				"          SaldoAdeudadoSBD_MN = ArchivoCIC.Deudor.SaldoAdeudadoSBD_MN,",
				"          SaldoTotalAdeudado_ME = ArchivoCIC.Deudor.SaldoTotalAdeudado_ME,",
				"          SaldoTotalAdeudado_MN = ArchivoCIC.Deudor.SaldoTotalAdeudado_MN,",
				"          TipoPersona = ArchivoCIC.Deudor.TipoPersona,",
				"          TotalCuotaCreditoSBD_ME = ArchivoCIC.Deudor.TotalCuotaCreditoSBD_ME,",
				"          TotalCuotaCreditoSBD_MN = ArchivoCIC.Deudor.TotalCuotaCreditoSBD_MN,",
				"          TotalCuotaCredito_ME = ArchivoCIC.Deudor.TotalCuotaCredito_ME,",
				"          TotalCuotaCredito_MN = ArchivoCIC.Deudor.TotalCuotaCredito_MN",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> Deudor",
				"OperacionesActivas sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Opa_IdOperacion as string,",
				"          Opa_IdPersona as long,",
				"          Opa_Entidad as string,",
				"          Opa_Moneda as string,",
				"          Opa_FechaVencimiento as timestamp,",
				"          Opa_FechaFormalizacion as timestamp,",
				"          Opa_Saldo as decimal(18,2),",
				"          Opa_MontoFormalizado as decimal(18,2),",
				"          Opa_MontoNoDesembolsado as decimal(18,2),",
				"          Opa_MontoAutorizado as decimal(18,2),",
				"          Opa_CuotaPrincipal as decimal(18,2),",
				"          Opa_CuotaIntereses as decimal(18,2),",
				"          Opa_TipoOperacion as integer,",
				"          Opa_FrecuenciaPaPrincipal as integer,",
				"          Opa_Condicion as string,",
				"          Opa_EstadoOperacion as integer,",
				"          Opa_DiasAtraso as integer,",
				"          Opa_TasaInteresNominal as decimal(5,2),",
				"          Opa_TipoTasa as string,",
				"          Opa_FechaCambioTasa as timestamp,",
				"          Opa_ParametroReferencia as integer,",
				"          Opa_FrecuenciaAjusteTasa as integer,",
				"          Opa_ComponenteFijoTasa as decimal(5,2),",
				"          Opa_PisoTasa as decimal(5,2),",
				"          Opa_TechoTasa as decimal(5,2),",
				"          Opa_Generador as integer,",
				"          Opa_EsSBD as string,",
				"          Opa_ActualizadoAl as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     preSQLs:['delete from [STAGE].[SUGEFOperacionesActivas]'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Opa_IdOperacion = IdOperacion,",
				"          Opa_IdPersona = IdPersona,",
				"          Opa_Entidad = Entidad,",
				"          Opa_Moneda = Moneda,",
				"          Opa_FechaVencimiento = FechaVencimiento,",
				"          Opa_FechaFormalizacion = FechaFormalizacion,",
				"          Opa_Saldo = Saldo,",
				"          Opa_MontoFormalizado = MontoFormalizado,",
				"          Opa_MontoNoDesembolsado = MontoNoDesembolsado,",
				"          Opa_MontoAutorizado = MontoAutorizado,",
				"          Opa_CuotaPrincipal = CuotaPrincipal,",
				"          Opa_CuotaIntereses = CuotaIntereses,",
				"          Opa_TipoOperacion = TipoOperacion,",
				"          Opa_FrecuenciaPaPrincipal = FrecuenciaPagoPrincipal,",
				"          Opa_Condicion = Condicion,",
				"          Opa_EstadoOperacion = EstadoOperacion,",
				"          Opa_DiasAtraso = DiasAtraso,",
				"          Opa_TasaInteresNominal = TasaInteresNominal,",
				"          Opa_TipoTasa = TipoTasa,",
				"          Opa_FechaCambioTasa = FechaCambioTipoTasa,",
				"          Opa_ParametroReferencia = ParametroReferencia,",
				"          Opa_FrecuenciaAjusteTasa = FrecuenciaAjusteTasa,",
				"          Opa_ComponenteFijoTasa = ComponenteFijoTasaVariable,",
				"          Opa_PisoTasa = PisoTasa,",
				"          Opa_TechoTasa = TechoTasa,",
				"          Opa_Generador = Generador,",
				"          Opa_EsSBD = EsSBD,",
				"          Opa_ActualizadoAl = ActualizadoAl",
				"     )) ~> SinkOperacionesActivas",
				"Deudor sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          IdPersona as long,",
				"          TipoPersona as integer,",
				"          IndicadorNumericoDeudor as decimal(38,18),",
				"          NivelCompPagoHist as integer,",
				"          FechaInicioReqAutorizacion as timestamp,",
				"          SaldoTotalAdeudado_MN as decimal(38,18),",
				"          SaldoTotalAdeudado_ME as decimal(38,18),",
				"          MontoNoDesembolsado_MN as decimal(38,18),",
				"          MontoNoDesembolsado_ME as decimal(38,18),",
				"          TotalCuotaCredito_MN as decimal(38,18),",
				"          TotalCuotaCredito_ME as decimal(38,18),",
				"          MontoFiado as decimal(38,18),",
				"          IndicadorNumericoDeudorSBD as decimal(38,18),",
				"          NivelCompPagoHistSBD as integer,",
				"          SaldoAdeudadoSBD_MN as decimal(38,18),",
				"          SaldoAdeudadoSBD_ME as decimal(38,18),",
				"          MontoNoDesembolsadoSBD_MN as decimal(38,18),",
				"          MontoNoDesembolsadoSBD_ME as decimal(38,18),",
				"          TotalCuotaCreditoSBD_MN as decimal(38,18),",
				"          TotalCuotaCreditoSBD_ME as double,",
				"          MontoFiadoSBD as decimal(38,18),",
				"          AtrasoMaximodiasSBD as integer,",
				"          AtrasoMaximodiasSBD_12 as integer,",
				"          AtrasoMaximodiasSBD_24 as integer,",
				"          PorcentajeDolarizacion as decimal(38,18),",
				"          PorcentajeTasavariable as decimal(38,18)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     preSQLs:['delete from [STAGE].[SUGEFDeudor]'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          IdPersona,",
				"          IndicadorNumericoDeudor,",
				"          NivelCompPagoHist,",
				"          FechaInicioReqAutorizacion,",
				"          SaldoTotalAdeudado_MN,",
				"          SaldoTotalAdeudado_ME,",
				"          MontoNoDesembolsado_MN,",
				"          MontoNoDesembolsado_ME,",
				"          TotalCuotaCredito_MN,",
				"          TotalCuotaCredito_ME,",
				"          MontoFiado,",
				"          IndicadorNumericoDeudorSBD,",
				"          NivelCompPagoHistSBD = NivelCompPagoHist,",
				"          SaldoAdeudadoSBD_MN,",
				"          SaldoAdeudadoSBD_ME,",
				"          MontoNoDesembolsadoSBD_MN,",
				"          MontoNoDesembolsadoSBD_ME,",
				"          TotalCuotaCreditoSBD_MN,",
				"          TotalCuotaCreditoSBD_ME,",
				"          MontoFiadoSBD,",
				"          AtrasoMaximodiasSBD,",
				"          AtrasoMaximodiasSBD_12,",
				"          AtrasoMaximodiasSBD_24,",
				"          PorcentajeDolarizacion,",
				"          PorcentajeTasavariable",
				"     )) ~> sinkDeudor"
			]
		}
	}
}